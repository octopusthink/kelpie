/*
 * Colour palettes
 *
 * We try to use colour in a semantic and predicatable way,
 * so we start by defining a palette of colours here, and then
 * we apply those colours to specific use text-transforms.
 *
 * As a general rule, try to avoid calling the colours directly,
 * and instead use the semantic colour variables defined below.
 */
$palette: (
	// Neutrals
	"neutral": (
		"white": #fff,
		"off-white": #f8f9fa,
		"grey100": #ebedf0,
		"grey200": #dee0e5,
		"grey300": #cfd3da,
		"grey400": #bec4cd,
		"grey500": #acb3bf,
		"grey600": #97a0af,
		"grey700": #818996,
		"grey800": #666c76,
		"grey900": #3b3f45,
		"black": #181b1c,
	),

	// Accent or brand colours.
	// May also require a "text" value (for brighter links) and an
	// "inverse" value, depending on how colour is used in the theme.
	"primary": (
		"white": #fcebf4,
		"light": #f19dca,
		"default": #e33592,
		"dark": #b32973,
		"black": #6a1844,
	),

	"secondary": (
		"white": #e2f5f6,
		"light": #76d0d6,
		"default": #00a8b4,
		"dark": #00858e,
		"black": #004f54,
	),
);

/*
 * Colours
 *
 * We define a number of semantic colour variables here to apply colours
 * in a predictable way. When applying colours to elements, try to use these
 * variables!
 */
$colors: (
	// Colours of layout elements.
	"layout": (
		"page-background": get($palette, "neutral", "off-white"),
		"content-background": get($palette, "neutral", "white"),
		"header-background": get($palette, "neutral", "black"),
		"header-text": get($palette, "neutral", "white"),
		"footer-background": get($palette, "neutral", "black"),
		"footer-text": get($palette, "neutral", "white"),
		"modal-menu-background": get($palette, "neutral", "black"),
		"modal-menu-text": get($palette, "neutral", "white"),
		"submenu-background": get($palette, "neutral", "grey200"),
		"submenu-text": get($palette, "neutral", "black"),
	),

	// Colours used for text.
	"text": (
		"default": get($palette, "neutral", "grey900"),
		"dark": get($palette, "neutral", "black"),
		"light": get($palette, "neutral", "grey800"),
		"inverse": get($palette, "neutral", "grey100"),
		"inverse-dark": get($palette, "neutral", "grey200"),
		"inverse-light": get($palette, "neutral", "white"),
	),

	// Colours for interactive elements (buttons, links).
	"interactive": (
		"background": get($palette, "primary", "dark"),
		"border": get($palette, "primary", "default"),
		"text": get($palette, "neutral", "black"),
		"focus": get($palette, "primary", "light"),
		"hover": get($palette, "secondary", "default"),
	),

	// Colours used for borders.
	"borders": (
		"dark": get($palette, "neutral", "grey800"),
		"default": get($palette, "neutral", "grey200"),
		"inverse": get($palette, "neutral", "grey800"),
		"inverse-light": get($palette, "neutral", "grey600"),
	),
);

/* Spacing
 *
 * We use an 8px grid and size spacing based on 10rem = 1px.
 * This allows spacing to scale with font size whilst maintaining readability.
 * Try to use only the spacing units below for margins and padding.
 */
$spacing: (
	"hairline": 0.4rem, // 4px, usually equivalent to whitespace in text.
	"xxs": 0.8rem, // 8px
	"xs": 1.6rem, // 16px
	"s": 2.4rem, // 24px
	"m": 3.2rem, // 32px
	"l": 4.8rem, // 48px
	"xl": 6.4rem, // 64px
	"xxl": 12.8rem // 128px
);

/* Site structure
 *
 * These are site-wide variables that determine
 * how elements are sized & within the available viewport space.
 */
$site: (
	"max-site-width": 160rem, // 1600px. Beyond this, we'll block out the edges of the screen.
	// If you need to change this width, also be sure to change set_post_thumbnail_size in functions.php
	"max-content-width": 56rem, // 560px. Used for content and Gutenberg blocks.
	"padding": 1.6rem, // 16px, used to determine the minimum padding around the whole site content.
);

/* Breakpoints
 *
 * These determine our standard media queries.
 * Chances are we very rarely need this many.
 */
$breakpoints: (
	"mobile": 400px,
	"mobile-wide": 480px,
	"phablet": 560px,
	"tablet-small": 640px,
	"tablet": 768px,
	"tablet-wide": 1024px,
	"desktop": 1248px,
	"desktop-wide": 1440px,
);

/* Typography 
 *
 * These variables determine how typography is applied across the site.
 * Several "styles" are configurable here to apply typographic treatments
 * to elements based on their semantic intention. (ie, headings, links, etc.)
 * See design-tokens/typography.scss for full implementation.
 * The easiest way to use this is to determine a base size and a scale modifier,
 * and Kelpie will generate a type scale to use, but these values can also be
 * overridden as needed. 
 */
$ems-multiplier: 1.229375; // Used to convert from rems to ems.
$typescale-mobile-base: 1.6rem; // Base font size. 1rem = 10px, so 1.6rem = 16px.
$typescale-mobile-modifier: 1.125; // Scale modifier to determine steps in type scale. use a larger value for more contrast, and a smaller value for less contrast.
$typescale-desktop-base: 1.8rem; // Base font size. 1rem = 10px, so 1.6rem = 16px.
$typescale-desktop-modifier: 1.25; // Scale modifier to determine steps in type scale. use a larger value for more contrast, and a smaller value for less contrast.

$typography: (
	"body":  (
		font-family: (-apple-system, blinkmacsystemfont, "Segoe UI",roboto, oxygen-sans, ubuntu, cantarell, "Helvetica Neue", sans-serif),
		font-style: normal,
		line-height: 1.6,
		letter-spacing: 0,
		color: get($colors, "text", "default"),
		weight: 400,
	),
	"headings":  (
		font-family: (-apple-system, blinkmacsystemfont, "Segoe UI", roboto, oxygen-sans, ubuntu, cantarell, "Helvetica Neue", sans-serif),
		font-style: normal,
		line-height: 1.2,
		letter-spacing: -0.025em,
		color: get($colors, "text", "default"),
		weight: 600,
		text-transform: normal,
	),
	"titles":  (
		font-family: (-apple-system, blinkmacsystemfont, "Segoe UI", roboto, oxygen-sans, ubuntu, cantarell, "Helvetica Neue", sans-serif),
		font-style: normal,
		line-height: 1,
		letter-spacing: -0.025em,
		color: get($colors, "text", "default"),
		weight: 400,
		text-transform: normal,
	),
	"subtitles":  (
		font-family: (-apple-system, blinkmacsystemfont, "Segoe UI", roboto, oxygen-sans, ubuntu, cantarell, "Helvetica Neue", sans-serif),
		font-style: normal,
		line-height: 1.2,
		letter-spacing: -0.015em,
		color: get($colors, "text", "default"),
		weight: 400,
		text-transform: normal,
	),
	"interface":  (
		font-family: (-apple-system, blinkmacsystemfont, "Segoe UI", roboto, oxygen-sans, ubuntu, cantarell, "Helvetica Neue", sans-serif),
		font-style: normal,
		line-height: 1.2,
		letter-spacing: -0.015em,
		color: get($colors, "text", "default"),
		weight: 500,
		text-transform: normal,
	),
	"metadata":  (
		font-family: (-apple-system, blinkmacsystemfont, "Segoe UI", roboto, oxygen-sans, ubuntu, cantarell, "Helvetica Neue", sans-serif),
		font-style: normal,
		line-height: 1.2,
		letter-spacing: 0.015em,
		color: get($colors, "text", "default"),
		weight: 500,
		text-transform: uppercase,
	),
    "scale-mobile": (
        "xs": ($typescale-mobile-base / $typescale-mobile-modifier / $typescale-mobile-modifier),
        "s": ($typescale-mobile-base / $typescale-mobile-modifier),
        "base": $typescale-mobile-base,
        "m": ($typescale-mobile-base * $typescale-mobile-modifier),
        "l": ($typescale-mobile-base * $typescale-mobile-modifier * $typescale-mobile-modifier),
        "xl": ($typescale-mobile-base * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier),
        "xxl": ($typescale-mobile-base * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier),
        "xxxl": ($typescale-mobile-base * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier),
        "xxxxl": ($typescale-mobile-base * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier * $typescale-mobile-modifier),
	),
    "scale-desktop": (
        "xs": ($typescale-desktop-base / $typescale-desktop-modifier / $typescale-desktop-modifier),
        "s": ($typescale-desktop-base / $typescale-desktop-modifier),
        "base": $typescale-desktop-base,
        "m": ($typescale-desktop-base * $typescale-desktop-modifier),
        "l": ($typescale-desktop-base * $typescale-desktop-modifier * $typescale-desktop-modifier),
        "xl": ($typescale-desktop-base * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier),
        "xxl": ($typescale-desktop-base * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier),
        "xxxl": ($typescale-desktop-base * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier),
        "xxxxl": ($typescale-desktop-base * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier * $typescale-desktop-modifier),
	),
);
