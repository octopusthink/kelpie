/**
 * Get a value from a map, nested or otherwise.
 *
 * Example:
 * get($typography, 'colors', 'red');
 * get($spacing, 'm');
 */
@function get($map, $keys...) {
	@each $key in $keys {
		$map: map-get($map, $key);
	}
	@return $map;
}

/**
 * Remove units from a number, so we can do maths on it.
 *
 * @param {Number} $number - Number to remove unit from
 * @return {Number} - Unitless number
 */
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}
	@return $number;
}

/**
 * Convert rems to ems.
 * We typically use this to style elements in the editor,
 * which doesn't translate rems properly.
 *
 * @param {String} $value - Value in rems to convert.
 * @return {String} - Value in ems.
 */
@function rems-to-ems($value) {
	@return #{strip-unit($value)  * $ems-multiplier}em;
}

/**
 * Convert rems to pixels.
 * We typically use this to style elements in the editor,
 * which doesn't translate rems properly.
 *
 * @param {String} $value - Value in rems to convert.
 * @return {String} - Value in pixels.
 */
@function rems-to-pixels($value) {
	@return #{strip-unit($value)  * 10}px;
}
