/*--------------------------------------------------------------
# Colour classes to apply to elements.
--------------------------------------------------------------*/
// Generate background & text colours for primary palette.
@each $name, $color in get($palette, 'primary') {
	.has-primary-#{$name}-background-color {
		background-color: $color;

		&:not(.has-text-color) {
			@if $name == 'white' or $name == 'light' {
				color: get($palette, 'primary', 'black');
			}

			@else if $name == 'default' {
				color: get($palette, 'neutral', 'white');
			}
			@else {
				color: get($palette, 'primary', 'white');
			}
		}
	}
}

// Generate background & text colours for secondary palette.
@each $name, $color in get($palette, 'secondary') {
	.has-secondary-#{$name}-background-color {
		background-color: $color;

		&:not(.has-text-color) {
			@if $name == 'white' or $name == 'light' {
				color: get($palette, 'secondary', 'black');
			}

			@else if $name == 'default' {
				color: get($palette, 'neutral', 'black');
			}
			@else {
				color: get($palette, 'secondary', 'white');
			}
		}
	}
}

// Generate background & text colours for black and white backgrounds.
.has-black-background-color {
	background-color: get($palette, 'neutral', 'black');

	&:not(.has-text-color) {
		color: get($palette, 'neutral', 'grey100');
	}
}

.has-white-background-color {
	background-color: get($palette, 'neutral', 'white');

	&:not(.has-text-color) {
		color: get($palette, 'neutral', 'grey900');
	}
}

// If our element has a background, child blocks should inherit the text colour.
// This ensures that everything remains readable. Yay!
.has-background {
	p,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		color: inherit;
	}

	a:not(.wp-block-button__link) {
		@include underline(currentColor);
		color: inherit;

		&:hover {
			@include remove-underline();
		}

		&:focus {
			@include focus-ring();
		}
	}
}

// Generate text colours for primary palette.
@each $name, $color in get($palette, 'primary') {
	.has-primary-#{$name}-color {
		color: $color;
	}
}

// Generate text colours for secondary palette.
@each $name, $color in get($palette, 'secondary') {
	.has-secondary-#{$name}-color {
		color: $color;
	}
}

// Black and white colour classes.
.has-black-color {
	color: get($palette, 'neutral', 'black');
}

.has-white-color {
	color: get($palette, 'neutral', 'white');
}
